How did viewing a diff between two versions of a file help you see the bug that
was introduced?

   
- I did not have to waste time comparing each line and word. I could directly go to the line that was changed. The line modified automatically
told me what was changed. So, it was easier to compare the files and found a bug faster.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can track bug. I can go back to pervious version without worrying to break the working project.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    I can save unwanted text and it can pollute the history of the file with automatic saving features like in google docs.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because in google docs, it can be separated in files and things. It can only move foward.

    but with git project, it might have to go back in past. 

How can you use the commands git log and git diff to view the history of files?

    git log command log all the commit history and its ids. While git diff can compare the changes between the two commits

    `git log`  ## to get all the commit logs
    `git diff commitIDold commitIDnew`   ## to get the difference between the commit  
    `q` [Enter]             ## to quit the log message

How might using version control make you more confident to make changes that
could break something?

    Because, i can go back to previous version without opening a code files and check if thigns are working out. that is way easier than chaning 
    variable names the way it was!

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here